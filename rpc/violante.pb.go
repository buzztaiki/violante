// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/violante.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddFilesRequest struct {
	Files                []string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFilesRequest) Reset()         { *m = AddFilesRequest{} }
func (m *AddFilesRequest) String() string { return proto.CompactTextString(m) }
func (*AddFilesRequest) ProtoMessage()    {}
func (*AddFilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad68d0399d6805d, []int{0}
}

func (m *AddFilesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFilesRequest.Unmarshal(m, b)
}
func (m *AddFilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFilesRequest.Marshal(b, m, deterministic)
}
func (m *AddFilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFilesRequest.Merge(m, src)
}
func (m *AddFilesRequest) XXX_Size() int {
	return xxx_messageInfo_AddFilesRequest.Size(m)
}
func (m *AddFilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddFilesRequest proto.InternalMessageInfo

func (m *AddFilesRequest) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

type AddFilesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFilesResponse) Reset()         { *m = AddFilesResponse{} }
func (m *AddFilesResponse) String() string { return proto.CompactTextString(m) }
func (*AddFilesResponse) ProtoMessage()    {}
func (*AddFilesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad68d0399d6805d, []int{1}
}

func (m *AddFilesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFilesResponse.Unmarshal(m, b)
}
func (m *AddFilesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFilesResponse.Marshal(b, m, deterministic)
}
func (m *AddFilesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFilesResponse.Merge(m, src)
}
func (m *AddFilesResponse) XXX_Size() int {
	return xxx_messageInfo_AddFilesResponse.Size(m)
}
func (m *AddFilesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFilesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddFilesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AddFilesRequest)(nil), "rpc.AddFilesRequest")
	proto.RegisterType((*AddFilesResponse)(nil), "rpc.AddFilesResponse")
}

func init() { proto.RegisterFile("rpc/violante.proto", fileDescriptor_0ad68d0399d6805d) }

var fileDescriptor_0ad68d0399d6805d = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x2a, 0x48, 0xd6,
	0x2f, 0xcb, 0xcc, 0xcf, 0x49, 0xcc, 0x2b, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x2e, 0x2a, 0x48, 0x56, 0x52, 0xe7, 0xe2, 0x77, 0x4c, 0x49, 0x71, 0xcb, 0xcc, 0x49, 0x2d, 0x0e,
	0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe1, 0x62, 0x4d, 0x03, 0xf1, 0x25, 0x18, 0x15,
	0x98, 0x35, 0x38, 0x83, 0x20, 0x1c, 0x25, 0x21, 0x2e, 0x01, 0x84, 0xc2, 0xe2, 0x82, 0xfc, 0xbc,
	0xe2, 0x54, 0x23, 0x57, 0x2e, 0x8e, 0x30, 0xa8, 0x99, 0x42, 0x96, 0x5c, 0x1c, 0x30, 0x79, 0x21,
	0x11, 0xbd, 0xa2, 0x82, 0x64, 0x3d, 0x34, 0x73, 0xa5, 0x44, 0xd1, 0x44, 0x21, 0x86, 0x28, 0x31,
	0x24, 0xb1, 0x81, 0xdd, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x80, 0xc9, 0xf6, 0xa5,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ViolanteClient is the client API for Violante service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ViolanteClient interface {
	AddFiles(ctx context.Context, in *AddFilesRequest, opts ...grpc.CallOption) (*AddFilesResponse, error)
}

type violanteClient struct {
	cc *grpc.ClientConn
}

func NewViolanteClient(cc *grpc.ClientConn) ViolanteClient {
	return &violanteClient{cc}
}

func (c *violanteClient) AddFiles(ctx context.Context, in *AddFilesRequest, opts ...grpc.CallOption) (*AddFilesResponse, error) {
	out := new(AddFilesResponse)
	err := c.cc.Invoke(ctx, "/rpc.Violante/AddFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ViolanteServer is the server API for Violante service.
type ViolanteServer interface {
	AddFiles(context.Context, *AddFilesRequest) (*AddFilesResponse, error)
}

func RegisterViolanteServer(s *grpc.Server, srv ViolanteServer) {
	s.RegisterService(&_Violante_serviceDesc, srv)
}

func _Violante_AddFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViolanteServer).AddFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Violante/AddFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViolanteServer).AddFiles(ctx, req.(*AddFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Violante_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Violante",
	HandlerType: (*ViolanteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddFiles",
			Handler:    _Violante_AddFiles_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/violante.proto",
}
